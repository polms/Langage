/* Generated By:JJTree: Do not edit this line. ASTmul.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package grammaireV3;

public
class ASTmul extends SimpleNode {
  public ASTmul(int id) {
    super(id);
  }

  public ASTmul(Lang p, int id) {
    super(p, id);
  }

  public void run() throws Exception {
	  assert this.jjtGetNumChildren() == 2;
	  for (Node n : this.children) {
		  ((MyNode)n).run();
	  }
	  Object v2 = MyNode.pop();
	  Object v1 = MyNode.pop();
	  
	  if (v1 instanceof Integer && v2 instanceof Integer) {
		  MyNode.push((Integer)v1 * (Integer)v2);  
	  } else if (v1 instanceof Float && v2 instanceof Float) {
		  MyNode.push((Float)v1 * (Float)v2);
	  } else if (v1 instanceof Float && v2 instanceof Integer) {
		  MyNode.push((Float)v1 * (Integer)v2);
	  } else if (v1 instanceof Integer && v2 instanceof Float) {
		  MyNode.push((Integer)v1 * (Float)v2);
	  } else {
		  throw new Exception("Internal type error");
	  }
  }
}
/* JavaCC - OriginalChecksum=ec38bbb7d135d6d4ff253829d17738fd (do not edit this line) */
