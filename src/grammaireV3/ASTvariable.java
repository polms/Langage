/* Generated By:JJTree: Do not edit this line. ASTvariable.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package grammaireV3;

import java.util.HashMap;

public
class ASTvariable extends SimpleNode {
  public ASTvariable(int id) {
    super(id);
  }

  public ASTvariable(Lang p, int id) {
    super(p, id);
  }
  
  @Override
  public void run() throws Exception {
	  assert this.jjtGetNumChildren() == 2;
	  String type = (String)((SimpleNode)this.children[0]).value;
	  String nom = (String)((SimpleNode)this.children[1]).value;
	  Variable v = new Variable(type, nom);
	  
	  HashMap<String, Variable> frame;
	  if (((SimpleNode)((SimpleNode)((SimpleNode)parent).parent).parent) == null) { // programme principal
		  frame = MyNode.symbols;
	  } else { // routine
		  frame = MyNode.get_context();
	  }
	  if (frame.containsKey(nom))
		  throw new Exception("Redefinition of "+nom);
	  frame.put(nom, v);
	  
  }

}
/* JavaCC - OriginalChecksum=e665c231a894d85fadceb9f14f6a5cb9 (do not edit this line) */
