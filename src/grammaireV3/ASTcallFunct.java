/* Generated By:JJTree: Do not edit this line. ASTcallFunct.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package grammaireV3;

import java.util.Scanner;

public
class ASTcallFunct extends SimpleNode {
  public ASTcallFunct(int id) {
    super(id);
  }

  public ASTcallFunct(Lang p, int id) {
    super(p, id);
  }

  public void run() throws Exception {
	  String name = (String)this.value;
	  int num = this.jjtGetNumChildren();
	  
	  if (this.children != null)
	  for (Node n : this.children)
		  ((MyNode)n).run();

	  if (((String)this.value).equals("read")) {
		  Scanner sc = new Scanner(System.in);
		  MyNode.push(sc.nextLine());
		  //sc.close();
	  } else if (MyNode.routinesTable.containsKey(name)) {
		  SimpleNode routine = MyNode.routinesTable.get(name);
		  if (MyNode.nb_args(routine) != num)
			  throw new Exception("Incorrect number of parameters for function "+name);
		  MyNode.routinesTable.get(name).run();
	  } else {
		  throw new Exception("Attempted to call undefined function "+(String)this.value);
	  }
  }
}
/* JavaCC - OriginalChecksum=3eac5269b07d064ace53fb04e53d6218 (do not edit this line) */
